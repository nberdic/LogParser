<Window x:Class="WPFLogFilter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        xmlns:controls="clr-namespace:WPFLogFilter.Controls"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz" AllowDrop="True"
        mc:Ignorable="d" Height="{Binding WindowHeight,Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged}" Width="Auto" MinWidth="1220" MinHeight="500"
        DataContext="{Binding Main,Source={StaticResource Locator}}" WindowStartupLocation="CenterScreen"
        Title="{Binding TitleVersion}">

    <!--If bool = false = hide, if bool = true = show-->

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>

    <!-- Event that trigger Relaycommands = Drop file into the window, change window size, and close the window by clicking X -->
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Drop">
            <cmd:EventToCommand Command="{Binding Mode=OneWay, Path=DropInFileCommand}"
                        PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="SizeChanged">
            <cmd:EventToCommand Command="{Binding ChangeSizeWindowCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>

        <i:EventTrigger EventName="Closing">
            <cmd:EventToCommand Command="{Binding CloseWindowCommand}" />
        </i:EventTrigger>

        <i:EventTrigger EventName="KeyDown">
            <cmd:EventToCommand Command="{Binding LastClosedTabOpenEventCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>


    <!--Setting up the main grid parameters and also the Main menu-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition MinWidth="1000" Width="*"/>
            <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Row="0" Grid.Column="1" Height="25">
            <Menu Background="{DynamicResource PrimaryHueDarkBrush}" Foreground="White" FontSize="14" BorderThickness="1" BorderBrush="Black">
                <MenuItem Header="_File" Height="25">
                    <MenuItem Header="_Open.." Command="{Binding ClickMenuCommand}"/>
                    <MenuItem Header="_Open last closed tab (CTRL+SHIFT+T)" Command="{Binding OpenClosedTabMenuCommand}" Visibility="{Binding Path=ShowOpenClosedTab,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <MenuItem Header="_Open in notepad.." Command="{Binding ClickOpenNotepadCommand}"/>
                    <MenuItem Header="_Exit" Command="{Binding ExitCommand}"/>
                </MenuItem>
            </Menu>
        </Grid>

        <!--level 0-->
        <!-- Level which is the housing for all the tabs and userControls -->
        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <TabControl ItemsSource="{Binding Tabs}" Visibility="{Binding Path=TabVisibility,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"  SelectedIndex="{Binding TabSelectIndex}">
                <TabControl.ItemTemplate>

                    <DataTemplate >
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="0,0,5,3">
                                <TextBlock.InputBindings>
                                    <MouseBinding Command="{Binding DataContext.TabMouseClickCommand,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" CommandParameter="{Binding}" MouseAction="MiddleClick"/>
                                </TextBlock.InputBindings>
                                <Run Text="{Binding Path=TabFileName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                            </TextBlock>
                            <TextBlock>
                            <Hyperlink Command="{Binding DataContext.CloseTabCommand,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" CommandParameter="{Binding}" TextDecorations="None">X</Hyperlink>
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </TabControl.ItemTemplate>
                <TabControl.ContentTemplate>

                    <DataTemplate>
                        <controls:TabUserControl/>
                    </DataTemplate>

                </TabControl.ContentTemplate>
            </TabControl>
        </Grid>
    </Grid>

</Window>
